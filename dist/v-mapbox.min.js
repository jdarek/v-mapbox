!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("map-promisified")):"function"==typeof define&&define.amd?define(["exports","map-promisified"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VMapbox={},e.mapPromisified)}(this,(function(e,t){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=r(t);function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var s,d={methods:{$_emitEvent:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.$emit(e,o({map:this.map,component:this},t))},$_emitMapEvent:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.$_emitEvent(e.type,o({mapboxEvent:e},t))}}},u={boxzoomcancel:{name:"boxzoomcancel"},boxzoomend:{name:"boxzoomcancel"},boxzoomstart:{name:"boxzoomstart"},click:{name:"click"},contextmenu:{name:"contextmenu"},data:{name:"data"},dataloading:{name:"dataloading"},dblclick:{name:"dblclick"},drag:{name:"drag"},dragend:{name:"dragend"},dragstart:{name:"dragstart"},error:{name:"error"},idle:{name:"idle"},load:{name:"load"},mousedown:{name:"mousedown"},mouseenter:{name:"mouseenter"},mouseleave:{name:"mouseleave"},mousemove:{name:"mousemove"},mouseout:{name:"mouseout"},mouseover:{name:"mouseover"},mouseup:{name:"mouseup"},move:{name:"move"},moveend:{name:"moveend"},movestart:{name:"movestart"},pitch:{name:"pitch"},pitchend:{name:"pitchend"},pitchstart:{name:"pitchstart"},remove:{name:"remove"},render:{name:"render"},resize:{name:"resize"},rotate:{name:"rotate"},rotateend:{name:"rotateend"},rotatestart:{name:"rotatestart"},sourcedata:{name:"sourcedata"},sourcedataloading:{name:"sourcedataloading"},styledata:{name:"styledata"},styledataloading:{name:"styledataloading"},styleimagemissing:{name:"styleimagemissing"},touchcancel:{name:"touchcancel"},touchend:{name:"touchend"},touchmove:{name:"touchmove"},touchstart:{name:"touchstart"},webglcontextlost:{name:"webglcontextlost"},webglcontextrestored:{name:"webglcontextrestored"},wheel:{name:"wheel"},zoom:{name:"zoom"},zoomend:{name:"zoomend"},zoomstart:{name:"zoomstart"}},c={container:{type:[String,HTMLElement],default:function(){return"map-".concat((""+Math.random()).split(".")[1])}},minZoom:{type:Number,default:0,required:!1},maxZoom:{type:Number,default:22,required:!1},minPitch:{type:Number,default:0,required:!1},maxPitch:{type:Number,default:0,required:!1},mapStyle:{type:[String,Object],default:void 0,required:!0},hash:{type:[Boolean,String],default:!1,required:!1},interactive:{type:Boolean,default:!0,required:!1},bearingSnap:{type:Number,default:7,required:!1},pitchWithRotate:{type:Boolean,default:!0,required:!1},clickTolerance:{type:Number,default:3,required:!1},attributionControl:{type:Boolean,default:!0,required:!1},customAttribution:{type:[String,Array],default:null,required:!1},logoPosition:{type:String,default:"bottom-left",validator:function(e){return["top-left","top-right","bottom-left","bottom-right"].includes(e)},required:!1},failIfMajorPerformanceCaveat:{type:Boolean,default:!1,required:!1},preserveDrawingBuffer:{type:Boolean,default:!1,required:!1},antialias:{type:Boolean,default:!1,required:!1},refreshExpiredTiles:{type:Boolean,default:!0,required:!1},maxBounds:{type:[Array,Object],default:function(){},required:!1},scrollZoom:{type:[Boolean,Object],default:function(){return!0},required:!1},boxZoom:{type:Boolean,default:!0,required:!1},dragRotate:{type:Boolean,default:!0,required:!1},dragPan:{type:Boolean,default:!0,required:!1},keyboard:{type:Boolean,default:!0,required:!1},doubleClickZoom:{type:Boolean,default:!0,required:!1},touchZoomRotate:{type:[Boolean,Object],default:function(){return!0},required:!1},touchPitch:{type:[Boolean,Object],default:function(){return!0},required:!1},trackResize:{type:Boolean,default:!0,required:!1},center:{type:[Object,Array],default:void 0,required:!1},zoom:{type:Number,default:0,required:!1},bearing:{type:Number,default:0,required:!1},pitch:{type:Number,default:0,required:!1},bounds:{type:[Object,Array],default:void 0,required:!1},fitBoundsOptions:{type:Object,default:void 0,required:!1},renderWorldCopies:{type:Boolean,default:!0,required:!1},maxTileCacheSize:{type:Number,default:null,required:!1},localIdeographFontFamily:{type:String,default:"sans-serif",required:!1},transformRequest:{type:Function,default:null,required:!1},collectResourceTiming:{type:Boolean,default:!1,required:!1},fadeDuration:{type:Number,default:300,required:!1},crossSourceCollisions:{type:Boolean,default:!0,required:!1},accessToken:{type:String,default:void 0,required:!1},locale:{type:Object,default:void 0,required:!1},RTLTextPluginUrl:{type:String,default:void 0,required:!1},light:{type:Object,default:void 0,required:!1},tileBoundaries:{type:Boolean,default:!1,required:!1},collisionBoxes:{type:Boolean,default:!1,required:!1},repaint:{type:Boolean,default:!1,required:!1}},l={maxBounds:function(e){this.map.setMaxBounds(e)},minZoom:function(e){this.map.setMinZoom(e)},maxZoom:function(e){this.map.setMaxZoom(e)},minPitch:function(e){this.map.setMinPitch(e)},maxPitch:function(e){this.map.setMaxPitch(e)},mapStyle:function(e){this.map.setStyle(e)},collisionBoxes:function(e){this.map.showCollisionBoxes=e},tileBoundaries:function(e){this.map.showTileBoundaries=e},repaint:function(e){this.map.repaint=e},zoom:function(e){this.map.setZoom(e)},center:function(e){this.map.setCenter(e)},bearing:function(e){this.map.setBearing(e)},pitch:function(e){this.map.setPitch(e)},light:function(e){this.map.setLight(e)}};function h(e,t,r,i){var a=this;this.initial||(this.$listeners["update:".concat(e)]?(this.propsIsUpdating[e]?(this._watcher.active=!1,this.$nextTick((function(){a._watcher.active=!0}))):(this._watcher.active=!0,t(r,i)),this.propsIsUpdating[e]=!1):t(r,i))}function p(e,t,r,i,a,o,n,s,d,u){"boolean"!=typeof n&&(d=s,s=n,n=!1);const c="function"==typeof r?r.options:r;let l;if(e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0,a&&(c.functional=!0)),i&&(c._scopeId=i),o?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,d(e)),e&&e._registeredComponents&&e._registeredComponents.add(o)},c._ssrRegister=l):t&&(l=n?function(e){t.call(this,u(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,s(e))}),l)if(c.functional){const e=c.render;c.render=function(t,r){return l.call(r),e(t,r)}}else{const e=c.beforeCreate;c.beforeCreate=e?[].concat(e,l):[l]}return r}const m={name:"GlMap",mixins:[{watch:(s={},Object.entries(l).forEach((function(e){s[e[0]]=function(t,r){return h.call(this,e[0],e[1].bind(this),t,r)}})),s)},{created:function(){this.actions={}},methods:{$_registerAsyncActions:function(e){this.actions=o(o({},i.default(e)),{},{stop:function(){var e=this;this.map.stop();var t={pitch:this.map.getPitch(),zoom:this.map.getZoom(),bearing:this.map.getBearing(),center:this.map.getCenter()};return Object.entries(t).forEach((function(t){e.$_updateSyncedPropsFabric(t[0],t[1])()})),Promise.resolve(t)}})}}},{methods:{$_updateSyncedPropsFabric:function(e,t){var r=this;return function(){r.propsIsUpdating[e]=!0;var i="function"==typeof t?t():t;return r.$emit("update:".concat(e),i)}},$_bindPropsUpdateEvents:function(){var e=this;[{events:["moveend"],prop:"center",getter:this.map.getCenter.bind(this.map)},{events:["zoomend"],prop:"zoom",getter:this.map.getZoom.bind(this.map)},{events:["rotate"],prop:"bearing",getter:this.map.getBearing.bind(this.map)},{events:["pitch"],prop:"pitch",getter:this.map.getPitch.bind(this.map)},{events:["moveend","zoomend","rotate","pitch"],prop:"bounds",getter:function(){var t=e.map.getBounds();return e.$props.bounds instanceof Array&&(t=t.toArray()),t}}].forEach((function(t){var r=t.events,i=t.prop,a=t.getter;r.forEach((function(t){e.$listeners["update:".concat(i)]&&e.map.on(t,e.$_updateSyncedPropsFabric(i,a))}))}))},$_loadMap:function(){var e=this;return this.mapboxPromise.then((function(t){return e.mapbox=t.default?t.default:t,new Promise((function(t){e.accessToken&&(e.mapbox.accessToken=e.accessToken);var r=new e.mapbox.Map(o(o({},e._props),{},{container:e.$refs.container,style:e.mapStyle}));r.on("load",(function(){return t(r)}))}))}))},$_RTLTextPluginError:function(e){this.$emit("rtl-plugin-error",{map:this.map,error:e})},$_bindMapEvents:function(e){var t=this;Object.keys(this.$listeners).forEach((function(r){e.includes(r)&&t.map.on(r,t.$_emitMapEvent)}))},$_unbindEvents:function(e){var t=this;e.forEach((function(e){t.map.off(e,t.$_emitMapEvent)}))}}},d],provide(){const e=this;return{get mapbox(){return e.mapbox},get map(){return e.map},get actions(){return e.actions}}},props:{mapboxGl:{type:Object,default:null},...c},data:()=>({initial:!0,initialized:!1}),computed:{loaded(){return!!this.map&&this.map.loaded()},version(){return this.map?this.map.version:null},isStyleLoaded(){return!!this.map&&this.map.isStyleLoaded()},areTilesLoaded(){return!!this.map&&this.map.areTilesLoaded()},isMoving(){return!!this.map&&this.map.isMoving()},canvas(){return this.map?this.map.getCanvas():null},canvasContainer(){return this.map?this.map.getCanvasContainer():null},images(){return this.map?this.map.listImages():null}},created(){this.map=null,this.propsIsUpdating={},this.mapboxPromise=this.mapboxGl?Promise.resolve(this.mapboxGl):import("mapbox-gl")},mounted(){this.$_loadMap().then((e=>{this.map=e,void 0!==this.RTLTextPluginUrl&&"loaded"!==this.mapbox.getRTLTextPluginStatus()&&this.mapbox.setRTLTextPlugin(this.RTLTextPluginUrl,this.$_RTLTextPluginError);const t=Object.keys(u);this.$_bindMapEvents(t),this.$_registerAsyncActions(e),this.$_bindPropsUpdateEvents(),this.initial=!1,this.initialized=!0,this.$emit("load",{map:e,component:this})}))},beforeDestroy(){this.$nextTick((()=>{this.map&&this.map.remove()}))}};var f=function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{staticClass:"mgl-map-wrapper"},[e._m(0),e._v(" "),e.initialized?e._t("default"):e._e()],2)};f._withStripped=!0;const y=p({render:f,staticRenderFns:[function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{ref:"container",attrs:{id:e.container}})}]},undefined,m,undefined,false,undefined,!1,void 0,void 0,void 0);var v={methods:{$_emitSelfEvent:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.$_emitMapEvent(e,o({control:this.control},t))},$_bindSelfEvents:function(e,t){var r=this;Object.keys(this.$listeners).forEach((function(i){e.includes(i)&&t.on(i,r.$_emitSelfEvent)}))},$_unbindSelfEvents:function(e,t){var r=this;0!==e.length&&t&&e.forEach((function(e){t.off(e,r.$_emitSelfEvent)}))}}},g={mixins:[d,v],inject:["mapbox","map","actions"],props:{position:{type:String,default:"top-right"}},watch:{position:function(){this.$_removeControl(),this.$_addControl()}},beforeDestroy:function(){this.$_removeControl()},methods:{$_addControl:function(){try{this.map.addControl(this.control,this.position)}catch(e){return void this.$_emitEvent("error",{error:e})}this.$_emitEvent("added",{control:this.control})},$_removeControl:function(){try{this.map&&this.control&&this.map.removeControl(this.control)}catch(e){return void this.$_emitEvent("error",{error:e})}this.$_emitEvent("removed",{control:this.control})}},render:function(){}},b={name:"NavigationControl",mixins:[g],props:{showCompass:{type:Boolean,default:!0},showZoom:{type:Boolean,default:!0},visualizePitch:{type:Boolean,default:!0}},created:function(){this.control=new this.mapbox.NavigationControl(this.$props),this.$_addControl()}},$={trackuserlocationstart:"trackuserlocationstart",trackuserlocationend:"trackuserlocationend",geolocate:"geolocate",error:"error"},_={name:"GeolocateControl",mixins:[d,v,g],props:{positionOptions:{type:Object,default:function(){return{enableHighAccuracy:!1,timeout:6e3}}},fitBoundsOptions:{type:Object,default:function(){return{maxZoom:15}}},trackUserLocation:{type:Boolean,default:!1},showAccuracyCircle:{type:Boolean,default:!1},showUserLocation:{type:Boolean,default:!0}},created:function(){var e=this.mapbox.GeolocateControl;this.control=new e(this.$props),this.$_addControl(),this.$_bindSelfEvents(Object.keys($),this.control)},methods:{trigger:function(){if(this.control)return this.control.trigger()}}},S={name:"FullscreenControl",mixins:[g],props:{container:{type:HTMLElement,default:void 0}},created:function(){this.control=new this.mapbox.FullscreenControl(this.$props),this.$_addControl()}},I={name:"AttributionControl",mixins:[g],props:{compact:{type:Boolean,default:!0},customAttribution:{type:[String,Array],deafault:void 0}},created:function(){this.control=new this.mapbox.AttributionControl(this.$props),this.$_addControl()}},x={name:"ScaleControl",mixins:[g],props:{maxWidth:{type:Number,default:150},unit:{type:String,default:"metric",validator:function(e){return["imperial","metric","nautical"].includes(e)}}},watch:{unit:function(e,t){this.control&&e!==t&&this.control.setUnit(e)}},created:function(){this.control=new this.mapbox.ScaleControl(this.$props),this.$_addControl()}};const L={drag:"drag",dragstart:"dragstart",dragend:"dragend"},E={click:"click",mouseenter:"mouseenter",mouseleave:"mouseleave"};const w={name:"MapMarker",mixins:[d,v],inject:["mapbox","map"],provide(){const e=this;return{get marker(){return e.marker}}},props:{offset:{type:[Object,Array],default:()=>[0,0]},coordinates:{type:Array,required:!0},color:{type:String,default:"blue"},anchor:{type:String,default:"center"},draggable:{type:Boolean,default:!1}},data:()=>({initial:!0,marker:void 0}),watch:{coordinates(e){this.initial||this.marker.setLngLat(e)},draggable(e){this.initial||this.marker.setDraggable(e)}},mounted(){const e={...this.$props};this.$slots.marker&&(e.element=this.$slots.marker[0].elm),this.marker=new this.mapbox.Marker(e),this.$listeners["update:coordinates"]&&this.marker.on("dragend",(e=>{let t;t=this.coordinates instanceof Array?[e.target._lngLat.lng,e.target._lngLat.lat]:e.target._lngLat,this.$emit("update:coordinates",t)}));const t=Object.keys(L);this.$_bindSelfEvents(t,this.marker),this.initial=!1,this.$_addMarker()},beforeDestroy(){void 0!==this.map&&void 0!==this.marker&&this.marker.remove()},methods:{$_addMarker(){this.marker.setLngLat(this.coordinates).addTo(this.map),this.$_bindMarkerDOMEvents(),this.$_emitEvent("added",{marker:this.marker})},$_emitSelfEvent(e){this.$_emitMapEvent(e,{marker:this.marker})},$_bindMarkerDOMEvents(){Object.keys(this.$listeners).forEach((e=>{Object.values(E).includes(e)&&this.marker._element.addEventListener(e,(e=>{this.$_emitSelfEvent(e)}))}))},remove(){this.marker.remove(),this.$_emitEvent("removed")},togglePopup(){return this.marker.togglePopup()}}};var C=function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{staticStyle:{display:"none"}},[e._t("marker"),e._v(" "),e.marker?e._t("default"):e._e()],2)};C._withStripped=!0;const M=p({render:C,staticRenderFns:[]},undefined,w,undefined,false,undefined,!1,void 0,void 0,void 0),k={open:"open",close:"close"};const O={name:"Popup",mixins:[d,v],inject:{mapbox:{default:null},map:{default:null},marker:{default:null}},props:{className:{type:String,default:void 0},closeButton:{type:Boolean,default:!0},closeOnClick:{type:Boolean,default:!0},closeOnMove:{type:Boolean,default:!1},focusAfterOpen:{type:Boolean,default:!0},anchor:{validator:e=>"string"==typeof e&&["top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"].includes(e),default:void 0},offset:{type:[Number,Object,Array],default:()=>[0,0]},coordinates:{type:Array,default:()=>[0,0]},onlyText:{type:Boolean,default:!1},showed:{type:Boolean,default:!1},maxWidth:{type:String,default:"240px"}},data:()=>({initial:!0,popup:void 0}),computed:{open:{get(){return void 0!==this.popup&&this.popup.isOpen()},set(e){this.map&&this.popup&&(e?this.popup.addTo(this.map):this.popup.remove())}}},watch:{coordinates(e){this.initial||this.popup.setLngLat(e)},showed(e,t){e!==t&&(this.open=e)}},created(){this.popup=new this.mapbox.Popup(this.$props)},mounted(){this.$_addPopup(),this.initial=!1},beforeDestroy(){this.map&&(this.popup.remove(),this.$_emitEvent("removed"))},methods:{$_addPopup(){if(this.popup=new this.mapbox.Popup(this.$props),void 0!==this.coordinates&&this.popup.setLngLat(this.coordinates),void 0!==this.$slots.default)if(this.onlyText)if(3===this.$slots.default[0].elm.nodeType){let e=document.createElement("span");e.appendChild(this.$slots.default[0].elm),this.popup.setText(e.innerText)}else this.popup.setText(this.$slots.default[0].elm.innerText);else this.popup.setDOMContent(this.$slots.default[0].elm);this.$_bindSelfEvents(Object.keys(k),this.popup),this.$_emitEvent("added",{popup:this.popup}),this.marker&&this.marker.setPopup(this.popup),this.showed&&(this.open=!0)},$_emitSelfEvent(e){this.$_emitMapEvent(e,{popup:this.popup})},remove(){this.popup.remove(),this.$_emitEvent("remove",{popup:this.popup})}}};var q=function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{staticStyle:{display:"none"}},[e._t("default")],2)};q._withStripped=!0;const B=p({render:q,staticRenderFns:[]},undefined,O,undefined,false,undefined,!1,void 0,void 0,void 0);var P=["mousedown","mouseup","click","dblclick","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"],j={layerId:{type:String,required:!0},layer:{type:Object,required:!0},before:{type:String,default:void 0}},T={clearSource:{type:Boolean,default:!0},replaceSource:{type:Boolean,default:!1},replace:{type:Boolean,default:!1}},F={mixins:[d],props:o(o(o({},{sourceId:{type:String,required:!0},source:{type:[Object,String],default:void 0}}),j),T),inject:["mapbox","map"],data:function(){return{initial:!0}},watch:{before:function(e,t){e!==t&&this.move(e)}},computed:{sourceLoaded:function(){return!!this.map&&this.map.isSourceLoaded(this.sourceId)},mapLayer:function(){return this.map?this.map.getLayer(this.layerId):null},mapSource:function(){return this.map?this.map.getSource(this.sourceId):null}},created:function(){this.layer.minzoom&&this.$watch("layer.minzoom",(function(e){this.initial||this.map.setLayerZoomRange(this.layerId,e,this.layer.maxzoom)})),this.layer.maxzoom&&this.$watch("layer.maxzoom",(function(e){this.initial||this.map.setLayerZoomRange(this.layerId,this.layer.minzoom,e)})),this.layer.paint&&this.$watch("layer.paint",(function(e){if(!this.initial&&e)for(var t=0,r=Object.keys(e);t<r.length;t++){var i=r[t];this.map.setPaintProperty(this.layerId,i,e[i])}}),{deep:!0}),this.layer.layout&&this.$watch("layer.layout",(function(e){if(!this.initial&&e)for(var t=0,r=Object.keys(e);t<r.length;t++){var i=r[t];this.map.setLayoutProperty(this.layerId,i,e[i])}}),{deep:!0}),this.layer.filter&&this.$watch("layer.filter",(function(e){this.initial||this.map.setFilter(this.layerId,e)}),{deep:!0})},beforeDestroy:function(){if(this.map){try{this.map.removeLayer(this.layerId)}catch(e){this.$_emitEvent("layer-does-not-exist",{layerId:this.sourceId,error:e})}if(this.clearSource)try{this.map.removeSource(this.sourceId)}catch(e){this.$_emitEvent("source-does-not-exist",{sourceId:this.sourceId,error:e})}}},methods:{$_emitLayerMapEvent:function(e){return this.$_emitMapEvent(e,{layerId:this.layerId})},$_bindLayerEvents:function(e){var t=this;Object.keys(this.$listeners).forEach((function(r){e.includes(r)&&t.map.on(r,t.layerId,t.$_emitLayerMapEvent)}))},$_unbindEvents:function(e){var t=this;this.map&&e.forEach((function(e){t.map.off(e,t.layerId,t.$_emitLayerMapEvent)}))},$_watchSourceLoading:function(e){"source"===e.dataType&&e.sourceId===this.sourceId&&(this.$_emitEvent("layer-source-loading",{sourceId:this.sourceId}),this.map.off("dataloading",this.$_watchSourceLoading))},move:function(e){this.map.moveLayer(this.layerId,e),this.$_emitEvent("layer-moved",{layerId:this.layerId,beforeId:e})},remove:function(){this.map.removeLayer(this.layerId),this.map.removeSource(this.sourceId),this.$_emitEvent("layer-removed",{layerId:this.layerId}),this.$destroy()}},render:function(){}},z=d,R=v,A=g,N=F,Z={withEvents:d,withSelfEvents:v,asControl:g,asLayer:F},D=y,U=b,G=_,V=S,W=I,H=x,X={name:"GeojsonLayer",mixins:[F],computed:{getSourceFeatures:function(){var e=this;return function(t){return e.map?e.map.querySourceFeatures(e.sourceId,{filter:t}):null}},getRenderedFeatures:function(){var e=this;return function(t,r){return e.map?e.map.queryRenderedFeatures(t,{layers:[e.layerId],filter:r}):null}},getClusterExpansionZoom:function(){var e=this;return function(t){return new Promise((function(r,i){if(!e.mapSource)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));e.mapSource.getClusterExpansionZoom(t,(function(e,t){return e?i(e):r(t)}))}))}},getClusterChildren:function(){var e=this;return function(t){return new Promise((function(r,i){var a=e.mapSource;if(!a)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));a.getClusterChildren(t,(function(e,t){return e?i(e):r(t)}))}))}},getClusterLeaves:function(){var e=this;return function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return new Promise((function(t,i){if(!e.mapSource)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));var a;(a=e.mapSource).getClusterLeaves.apply(a,r.concat([function(e,r){return e?i(e):t(r)}]))}))}}},created:function(){this.source&&this.$watch("source.data",(function(e){this.initial||this.mapSource.setData(e)}),{deep:!0}),this.$_deferredMount()},methods:{$_deferredMount:function(){if(this.map.on("dataloading",this.$_watchSourceLoading),this.source){var e=o({type:"geojson"},this.source);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}}this.$_addLayer(),this.$_bindLayerEvents(P),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,source:this.sourceId},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})},setFeatureState:function(e,t){if(this.map){var r={id:e,source:this.source};return this.map.setFeatureState(r,t)}},getFeatureState:function(e){if(this.map){var t={id:e,source:this.source};return this.map.getFeatureState(t)}},removeFeatureState:function(e,t,r){if(this.map){var i={id:e,source:this.source,sourceLayer:t};return this.map.removeFeatureState(i,r)}}}},J={name:"ImageLayer",mixins:[F],created:function(){this.source&&(this.source.coordinates&&this.$watch("source.coordinates",(function(e){this.initial||e&&this.mapSource.setCoordinates(e)}),{deep:!0}),this.source.url&&this.$watch("source.url",(function(e){this.initial||e&&this.mapSource.updateImage({url:e,coordinates:this.source.coordinates})}),{deep:!0})),this.$_deferredMount()},methods:{$_deferredMount:function(){var e=o({type:"image"},this.source);this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(P),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,source:this.sourceId,type:"raster"},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})}}},K={name:"CanvasLayer",mixins:[F],inject:["mapbox","map"],props:{source:{type:Object,required:!0},layer:{type:Object,default:null}},computed:{canvasElement:function(){return this.mapSource?this.mapSource.getCanvas():null}},watch:{coordinates:function(e){this.initial||this.mapSource.setCoordinates(e)}},created:function(){this.$_deferredMount()},methods:{$_deferredMount:function(){var e=o({type:"canvas"},this.source);this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(P),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,source:this.sourceId,type:"raster"},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId,canvas:this.canvasElement})}}},Q={name:"VideoLayer",mixins:[F],computed:{video:function(){return this.map.getSource(this.sourceId).getVideo()}},created:function(){this.source&&this.source.coordinates&&this.$watch("source.coordinates",(function(e){this.initial||this.mapSource.setCoordinates(e)})),this.$_deferredMount()},methods:{$_deferredMount:function(){var e=o({type:"video"},this.source);this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(P),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,source:this.sourceId,type:"background"},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})}}},Y={name:"VectorLayer",mixins:[F],computed:{getSourceFeatures:function(){var e=this;return function(t){return e.map?e.map.querySourceFeatures(e.sourceId,{sourceLayer:e.layer["source-layer"],filter:t}):null}},getRenderedFeatures:function(){var e=this;return function(t,r){return e.map?e.map.queryRenderedFeatures(t,{layers:[e.layerId],filter:r}):null}}},watch:{filter:function(e){this.initial||this.map.setFilter(this.layerId,e)}},created:function(){this.$_deferredMount()},methods:{$_deferredMount:function(){var e=o({type:"vector"},this.source);this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(P),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,source:this.sourceId},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})},setFeatureState:function(e,t){if(this.map){var r={id:e,source:this.sourceId,"source-layer":this.layer["source-layer"]};return this.map.setFeatureState(r,t)}},getFeatureState:function(e){if(this.map){var t={id:e,source:this.source,"source-layer":this.layer["source-layer"]};return this.map.getFeatureState(t)}}}},ee={name:"RasterLayer",mixins:[F],created:function(){this.$_deferredMount()},methods:{$_deferredMount:function(){var e=o({type:"raster"},this.source);this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch(t){this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(P),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=o({id:this.layerId,type:"raster",source:this.sourceId},this.layer);this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})}}},te=M,re=B;e.$helpers=Z,e.MglAttributionControl=W,e.MglCanvasLayer=K,e.MglFullscreenControl=V,e.MglGeojsonLayer=X,e.MglGeolocateControl=G,e.MglImageLayer=J,e.MglMap=D,e.MglMarker=te,e.MglNavigationControl=U,e.MglPopup=re,e.MglRasterLayer=ee,e.MglScaleControl=H,e.MglVectorLayer=Y,e.MglVideoLayer=Q,e.asControl=A,e.asLayer=N,e.default=y,e.withEvents=z,e.withSelfEvents=R,Object.defineProperty(e,"__esModule",{value:!0})}));
